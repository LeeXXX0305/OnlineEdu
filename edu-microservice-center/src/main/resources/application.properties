# 服务端口
server.port=8110
# 服务名
spring.application.name=edu-center

# 环境设置：dev、test、prod
spring.profiles.active=dev

# mysql数据库连接
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/online_edu?characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=1234

# Hikari是Spring Boot 2.0之后默认整合的数据库连接池，比druid更快的数据库连接池
# 数据源类型
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 连接池名称，默认HikariPool-1
spring.datasource.hikari.pool-name=GuliHikariPool
# 最大连接数，小于等于0会被重置为默认值10；大于零小于1会被重置为minimum-idle的值
spring.datasource.hikari.maximum-pool-size=12
# 连接超时时间:毫秒，小于250毫秒，否则被重置为默认值30秒
spring.datasource.hikari.connection-timeout=60000
# 最小空闲连接，默认值10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
spring.datasource.hikari.minimum-idle=10
# 空闲连接超时时间，默认值600000（10分钟），大于等于max-lifetime且max-lifetime>0，会被重置为0；不等于0且小于10秒，会被重置为10秒。
# 只有空闲连接数大于最大连接数且空闲时间超过该值，才会被释放
spring.datasource.hikari.idle-timeout=500000
# 连接最大存活时间.不等于0且小于30秒，会被重置为默认值30分钟.设置应该比mysql设置的超时时间短
spring.datasource.hikari.max-lifetime=540000
#连接测试查询
spring.datasource.hikari.connection-test-query=SELECT 1

#mybatis日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
##配置mapper xml文件的路径
#mybatis-plus.mapper-locations=classpath:com/guli/edu/mapper/xml/*.xml
#
#返回json的全局时间格式
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8

# 设置日志级别
logging.level.root=WARN


#指定注册中心地址
eureka.client.service-url.defaultZone=http://localhost:8220/eureka/
##eureka服务器上获取的是服务器的ip地址，否则是主机名
eureka.instance.prefer-ip-address=true
#
## 心跳检测检测与续约时间
## 测试时将值设置设置小些，保证服务关闭后注册中心能及时踢出服务
## 配置说明
##　　lease-renewal-interval-in-seconds 每间隔5s，向服务端发送一次心跳，证明自己依然”存活“
##　　lease-expiration-duration-in-seconds  告诉服务端，如果我10s之内没有给你发心跳，就代表我“死”了，将我踢出掉。
#eureka.instance.lease-renewal-interval-in-seconds=5
#eureka.instance.lease-expiration-duration-in-seconds=10